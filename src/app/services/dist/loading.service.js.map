{"version":3,"sources":["loading.service.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAC3C,6BAAmD;AAKnD;IAAA;QACU,aAAQ,GAAG,IAAI,sBAAe,CAAC,KAAK,CAAC,CAAC;IAahD,CAAC;IAXQ,kCAAS,GAAhB;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;IAEM,mCAAU,GAAjB;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEM,mCAAU,GAAjB;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAbU,cAAc;QAH1B,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,cAAc,CAc1B;IAAD,qBAAC;CAdD,AAcC,IAAA;AAdY,wCAAc","file":"loading.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  private loading$ = new BehaviorSubject(false);\n\n  public isLoading(): Observable<boolean> {\n    return this.loading$.asObservable();\n  }\n\n  public showLoader(): void {\n    this.loading$.next(true);\n  }\n\n  public hideLoader(): void {\n    this.loading$.next(false);\n  }\n}\n"]}